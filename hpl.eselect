# -*-eselect-*-  vim: ft=eselect
# Copyright 2005-2019 Gentoo Authors
# Distributed under the terms of the GNU GPL version 2 or later

DESCRIPTION="Manage installed versions of sys-cluster/hpl package"
MAINTAINER="sworden.cao@gmail.com"

### find a list of hpl target
# TODO: solve dependence

find_targets() {
    local f
    for f in "${EROOT}"/etc/modulefiles/hpl/*; do
        [[ -f ${f} ]] && basename "${f}"
    done
}

### load module

module_load() {
    local target=$1

    if is_number "${target}"; then
        local targets=( $(find_targets) )
        target=${targets[target-1]}
    fi

    #module load hpl/${target} || die -q "Couldn't load module ${target}" \
    /usr/share/Modules/bin/modulecmd bash load hpl/${target} \
        || die -q "Couldn't load module ${target}"
}

### list action

describe_list() {
    echo "List all installed version of hpl packages"
}

do_list() {
    local i targets=( $(find_targets) )

    write_list_start "Available hpl targets:"
    for (( i = 0; i < ${#targets[@]}; i++ )); do
        # highlight the target where the MPIHOME is pointing to
        [[ ${targets[i]} = $(basename "${HPLHOME}") ]] \
            && targets[i]=$(highlight_marker "${targets[i]}")
    done
    write_numbered_list -m "(none found)" "${targets[@]}"
}

### set action

describe_set() {
    echo "Activate one of the installed hpl packages"
}

describe_set_parameters() {
    echo "<target>"
}

describe_set_options() {
    echo "target : Target name or number (from 'list' action)"
}

do_set() {
    local targets=( $(find_targets) )
    [[ $# -eq 1 ]] || die -q "Please specify exactly one package to activate!"
    if [ ! -z "${MPIHOME}"] && [[ ${targets[@]} =~ "${HPLHOME}" ]]; then
        #module unload mpi/${MPIHOME} \
        echo "unloading mpi/${HPLHOME}"
        /usr/share/Modules/bin/modulecmd bash unload mpi/${MPIHOME} \
        	|| die -q "Couldn't unload previous module"
	fi
    echo "loading $1"
    module_load $1
}

### none action

describe_none() {
    echo "Inactive all HPL targets"
}

do_none() {
    local i targets=( $(find_targets) )

    for (( i = 0; i < ${#targets[@]}; i++ )); do
        #module unload hpl/${MPIHOME} \
        echo "unloading hpl/${MPIHOME}"
        /usr/share/Modules/bin/modulecmd bash unload hpl/${MPIHOME} \
            || die -q "Couldn't unload previous module"
    done
}

### show action

describe_show() {
    echo "Print the currently active HPL version"
}

do_show() {
    local i targets=( $(find_targets) )

    write_list_start "Current HPL version:"
    for (( i = 0; i < ${#targets[@]}; i++ )); do
        if [[ ${targets[i]} = $(basename "${HPLHOME}") ]]; then
            write_kv_list_entry "${targets[i]}" ""
            return
        fi
    done
    write_kv_list_entry "(unset)" ""
}
