# -*-eselect-*-  vim: ft=eselect
# Copyright 2005-2019 Gentoo Authors
# Distributed under the terms of the GNU GPL version 2 or later

DESCRIPTION="Manage installed versions of MPI packages"
MAINTAINER="sworden.cao@gmail.com"

init() {
	local d
	[[ ${UID} -eq 0 ]] && HOME="${ROOT}/root"
	d="$(canonicalise "${ROOT}/${HOME}")"
	d="${d}/.env.d/"
	user_ev_sh="${d}mpi.sh"; 
	user_ev_csh="${d}mpi.csh"; 
	
	if [[ ! -d "${d}" ]]; then
		mkdir "${d}" || die -q "Failed to create ${d}."
	elif [[ ! -w "${d}" ]]; then
		die -q "You do not have permission to mkdir ${d}."
	fi
	[[ -f "${user_ev_sh}" && ! -w "${user_ev_sh}" \
		&& -f "${user_ev_csh}" && ! -w "${user_ev_csh}" ]] \
		&& die -q "You do not have permission to write to ${user_ev_sh} or ${user_ev_csh}."
}

global_env() {
	local d=$(canonicalise "${ROOT}/etc/env.d/mpi/${1}")
	[ -z "${d}" ] && die "Cannot find global env file for ${1}"
	ev=${d}
}

### find a list of MPI targets

find_targets() {
    local f
    for f in "${EROOT}"/etc/modulefiles/mpi/*; do
        [[ -f ${f} ]] && basename "${f}"
    done
}

### load module

module_load() {
    local target=$1

    if is_number "${target}"; then
        local targets=( $(find_targets) )
        target=${targets[target-1]}
    fi

    #module load mpi/${target} || die -q "Couldn't load module ${target}" \
    /usr/share/Modules/bin/modulecmd bash load mpi/${target} \
        || die -q "Couldn't load module ${target}"
}

### list action

describe_list() {
    echo "List all installed version of MPI packages"
}

do_list() {
    local i targets=( $(find_targets) )

    write_list_start "Available MPI targets:"
    for (( i = 0; i < ${#targets[@]}; i++ )); do
        # highlight the target where the MPIHOME is pointing to
        [[ ${targets[i]} = $(basename "${MPIHOME}") ]] \
            && targets[i]=$(highlight_marker "${targets[i]}")
    done
    write_numbered_list -m "(none found)" "${targets[@]}"
}

### set action

describe_set() {
    echo "Activate one of the installed MPI packages"
}

describe_set_parameters() {
    echo "<target>"
}

describe_set_options() {
    echo "target : Target name or number (from 'list' action)"
}

do_set() {
	init
	global_env ${1}

    local targets=( $(find_targets) )
    [[ $# -eq 1 ]] || die -q "Please specify exactly one package to activate!"
    if [ ! -z "${MPIHOME}"] && [[ ${targets[@]} =~ "${MPIHOME}" ]]; then
cat <<-EOF >${user_ev_sh}
module unload mpi/"${MPIHOME}"
module load mpi/"${1}"
EOF

cat <<-EOF >${user_ev_csh}
module unload mpi/"${MPIHOME}"
module load mpi/"${1}"
EOF
	else
cat <<-EOF >${user_ev_sh}
module load mpi/"${1}"
EOF

cat <<-EOF >${user_ev_csh}
module load mpi/"${1}"
EOF
	fi
    #echo "loading $1"
    #module_load $1
	echo "Remember to source /etc/profile or /etc/csh.login"
}

### none action

describe_none() {
    echo "Inactive all MPI targets"
}

do_none() {
	init
	global_env ${1}

    local i targets=( $(find_targets) )

    for (( i = 0; i < ${#targets[@]}; i++ )); do
cat <<-EOF >${user_ev_sh}
module unload mpi/"${MPIHOME}"
EOF

cat <<-EOF >${user_ev_csh}
module unload mpi/"${MPIHOME}"
EOF
    done
}

### show action

describe_show() {
    echo "Print the currently active MPI version"
}

do_show() {
    local i targets=( $(find_targets) )

    write_list_start "Current MPI version:"
    for (( i = 0; i < ${#targets[@]}; i++ )); do
        if [[ ${targets[i]} = $(basename "${MPIHOME}") ]]; then
            write_kv_list_entry "${targets[i]}" ""
            return
        fi
    done
    write_kv_list_entry "(unset)" ""
}
